{"version":3,"sources":["search.svg","alert.svg","components/UserCard/userCard.js","state/constants.js","state/actions.js","components/Search/search.js","back.svg","components/RepoCard/repoCard.js","components/ReposList/reposList.js","App.js","state/index.js","state/userReducer.js","state/reposReducer.js","createStore.js","index.js"],"names":["UserCard","to","className","src","this","props","avatar","alt","username","line","element","truncateText","text","description","Component","constants","getUserInfo","dispatch","a","axios","get","then","response","type","payload","data","status","catch","error","resetState","getuserRepos","Search","onChange","e","preventDefault","setState","target","value","getUser","state","forceUpdate","userInfo","role","autoComplete","name","style","display","placeholder","onClick","search","Object","keys","length","avatar_url","login","bio","alert","connect","user","bindActionCreators","RepoCard","getDate","date","Date","toDateString","window","open","url","focus","createdDate","stargazers","watchers","forks","licence","ReposList","back","userRepos","map","repo","created_at","stargazers_count","watchers_count","forks_count","license","html_url","repos","App","path","component","exact","combineReducers","action","middlewares","ReduxThunk","logger","store","applyMiddleware","createStore","createStoreWithMiddleware","RootReducer","ReactDOM","render","document","getElementById"],"mappings":"gVAAe,G,YAAA,IAA0B,oCCA1B,MAA0B,kC,gCCsC1BA,E,4JA5Bb,WACE,OACE,cAAC,IAAD,CAAMC,GAAG,SAASC,UAAU,YAA5B,SACE,yBAAQA,UAAU,eAAlB,UACE,qBAAKC,IAAKC,KAAKC,MAAMC,OAAQC,IAAI,SAASL,UAAU,gBACpD,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BE,KAAKC,MAAMG,WACtC,qBAAKN,UAAU,mBAAf,SACE,cAAC,IAAD,CACIO,KAAM,EACNC,QAAQ,MACRC,aAAa,MACbC,KAAMR,KAAKC,MAAMQ,4B,GAdZC,a,yCCRVC,EACI,gBADJA,EAEK,iBAFLA,EAGE,c,iBCAFC,EAAc,SAACR,GAAD,8CAAc,WAAOS,GAAP,SAAAC,EAAA,sEACjCC,IAAMC,IAAN,uCAA2CZ,IAChDa,MAAK,SAAAC,GACJL,EAAS,CACPM,KAAMR,EACNS,QAASF,EAASG,KAClBC,OAAQJ,EAASI,YAGpBC,OAAM,SAAAC,GACLX,EAAS,CACPM,KAAMR,EACNS,QAASI,EAAMN,SAASI,YAZW,2CAAd,uDAiBdG,EAAa,kBAAM,SAACZ,GAC/BA,EAAS,CACPM,KAAMR,MAIGe,EAAe,SAACtB,GAAD,8CAAc,WAAOS,GAAP,SAAAC,EAAA,sEAClCC,IAAMC,IAAN,uCAA0CZ,EAA1C,WACLa,MAAK,SAAAC,GACJL,EAAS,CACPM,KAAMR,EACNS,QAASF,EAASG,UAGrBE,OAAM,SAAAC,GACLX,EAAS,CACPM,KAAMR,EACNS,QAASI,EAAMN,SAASI,YAXY,2CAAd,uDCftBK,E,kDAEJ,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAWR2B,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKC,SAAS,CACZ3B,SAAUyB,EAAEG,OAAOC,SAfJ,EAmBnBC,QAAU,SAACL,GACTA,EAAEC,iBACF,EAAK7B,MAAMW,YAAY,EAAKuB,MAAM/B,UAClC,EAAKgC,eAnBL,EAAKD,MAAQ,CACX/B,SAAU,IAJK,E,qDAQnB,WACEJ,KAAKC,MAAMwB,e,oBAgBb,WAEE,IAAQY,EAAarC,KAAKC,MAAlBoC,SACR,OACE,gCAEE,uBAAMC,KAAK,SAASxC,UAAU,iBAAiByC,aAAa,MAA5D,UACE,uBAAOA,aAAa,QAAQC,KAAK,SAASrB,KAAK,OAAOsB,MAAO,CAACC,QAAS,UACvE,uBACEvB,KAAK,SACLqB,KAAK,SACLG,YAAY,eACZ7C,UAAU,eACV8B,SAAU5B,KAAK4B,SACfK,MAAOjC,KAAKmC,MAAM/B,WAEpB,wBAAQN,UAAU,gBAAgB8C,QAAS5C,KAAKkC,QAAhD,SACE,qBAAKnC,IAAK8C,EAAQ1C,IAAI,SAASL,UAAU,qBAGE,IAA5CgD,OAAOC,KAAK/C,KAAKC,MAAMoC,UAAUW,QAAgB,cAAC,EAAD,CAChD9C,OAAQmC,EAASY,WACjB7C,SAAUiC,EAASa,MACnBzC,YAAa4B,EAASc,MAEQ,kBAAxBnD,KAAKC,MAAMoC,UACnB,sBAAKvC,UAAU,aAAf,UACE,qBAAKC,IAAKqD,EAAOjD,IAAI,UADvB,4D,GArDWO,aA+EN2C,eAXS,SAAAlB,GACtB,MAAO,CACLE,SAAUF,EAAMmB,SAIO,SAAAzC,GAAQ,MAAK,CACtCD,YAAa2C,YAAmB3C,EAAaC,GAC7CY,WAAY8B,YAAmB9B,EAAYZ,MAG9BwC,CAA6C1B,GC1F7C,MAA0B,iCC+C1B6B,G,kNAvCbC,QAAU,SAACC,GACT,OAAO,IAAIC,KAAKD,GAAME,gB,4CAGxB,WAAU,IAAD,OACP,OACE,yBAAQ9D,UAAU,eAAe8C,QAAS,kBAAMiB,OAAOC,KAAK,EAAK7D,MAAM8D,IAAK,UAAUC,SAAtF,UACE,oBAAIlE,UAAU,YAAd,SAA2BE,KAAKC,MAAMuC,OACtC,qBAAK1C,UAAU,mBAAf,SACE,cAAC,IAAD,CACEO,KAAM,EACNC,QAAQ,MACRC,aAAa,MACbC,KAAMR,KAAKC,MAAMQ,gBAGrB,sBAAKX,UAAU,oBAAf,sBAA6CE,KAAKyD,QAAQzD,KAAKC,MAAMgE,gBACrE,sBAAKnE,UAAU,oBAAf,UACE,sBAAKA,UAAU,aAAf,yBAAyCE,KAAKC,MAAMiE,cACpD,sBAAKpE,UAAU,WAAf,uBAAqCE,KAAKC,MAAMkE,YAChD,sBAAKrE,UAAU,QAAf,oBAA+BE,KAAKC,MAAMmE,SAC1C,sBAAKtE,UAAU,eAAf,sBAAwCE,KAAKC,MAAMoE,QAAUrE,KAAKC,MAAMoE,QAAU,oB,GAvBrE3D,cCKjB4D,G,6KAEJ,WACEtE,KAAKC,MAAMyB,aAAa1B,KAAKC,MAAMoC,SAASa,S,oBAE9C,WACE,OACE,gCACE,cAAC,IAAD,CAAMrD,GAAG,mBAAT,SACE,wBAAQC,UAAU,cAAlB,SACE,qBAAKC,IAAKwE,EAAMpE,IAAI,oBAGxB,sBAAML,UAAU,qBAAhB,UACGE,KAAKC,MAAMuE,UAAUxB,OAAS,GAAKhD,KAAKC,MAAMuE,UAAUC,KAAI,SAAAC,GAAI,OAC/D,qBAAK5E,UAAU,qBAAf,SACE,cAAC,EAAD,CACE0C,KAAMkC,EAAKlC,KACX/B,YAAaiE,EAAKjE,YAClBwD,YAAaS,EAAKC,WAClBT,WAAYQ,EAAKE,iBACjBT,SAAUO,EAAKG,eACfT,MAAOM,EAAKI,YACZC,QAASL,EAAKK,QACdhB,IAAKW,EAAKM,gBAIiB,kBAAzBhF,KAAKC,MAAMuE,WACjB,sBAAK1E,UAAU,cAAf,UACE,qBAAKC,IAAKqD,EAAOjD,IAAI,UADvB,4E,GA7BYO,cAwDT2C,eAVS,SAAAlB,GACtB,MAAO,CACLE,SAAUF,EAAMmB,KAChBkB,UAAWrC,EAAM8C,UAIM,SAAApE,GAAQ,MAAK,CACtCa,aAAc6B,YAAmB7B,EAAcb,MAElCwC,CAA6CiB,GCxC7CY,E,4JAdb,WACE,OACE,qBAAKpF,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqF,KAAK,mBAAmBC,UAAWzD,EAAQ0D,OAAK,IACvD,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWd,EAAWe,OAAK,e,GAR1C3E,a,QCPH4E,cAAgB,CAC7BhC,KCFa,WAAuB,IAAtBnB,EAAqB,uDAAf,GAAIoD,EAAW,uCACnC,OAAQA,EAAOpE,MACb,KAAKR,EACH,OAAO4E,EAAOnE,QAEd,KAAKT,EACH,MAAO,GAEX,QACE,OAAOwB,IDNX8C,MEHa,WAAuB,IAAtB9C,EAAqB,uDAAf,GAAIoD,EAAW,uCACnC,OAAQA,EAAOpE,MACb,KAAKR,EACH,OAAO4E,EAAOnE,QAEhB,KAAKT,EACH,MAAO,GAET,QACE,OAAOwB,M,iBCPAqD,EAAc,CAACC,IAAYC,KAI3BC,EAF4BC,IAAe,WAAf,EAAmBJ,EAAnBI,CAAgCC,IAEpDC,CAA0BC,GCF/CC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.a28ef397.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/search.8e55e40c.svg\";","export default __webpack_public_path__ + \"static/media/alert.162cee4a.svg\";","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './userCardStyles.css';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass UserCard extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Link to=\"/repos\" className=\"user-link\">\r\n        <button className=\"user-wrapper\">\r\n          <img src={this.props.avatar} alt=\"avatar\" className=\"user-avatar\"/>\r\n          <div className=\"user-info\">\r\n            <h4 className=\"user-name\">{this.props.username}</h4>\r\n            <div className=\"user-description\">\r\n              <TextTruncate\r\n                  line={2}\r\n                  element=\"div\"\r\n                  truncateText=\"...\"\r\n                  text={this.props.description}\r\n                />\r\n            </div>\r\n          </div>\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  avatar: PropTypes.string,\r\n  username: PropTypes.string,\r\n  description: PropTypes.string\r\n}\r\n\r\nexport default UserCard;","export const constants = {\r\n  GET_USER_INFO: 'GET_USER_INFO',\r\n  GET_USER_REPOS: 'GET_USER_REPOS',\r\n  RESET_STATE: 'RESET_STATE'\r\n}","import { constants } from './constants';\r\nimport axios from 'axios';\r\n\r\nexport const getUserInfo = (username) => async (dispatch) => {\r\n  await axios.get( `https://api.github.com/users/${username}`)\r\n  .then(response => {\r\n    dispatch({\r\n      type: constants.GET_USER_INFO,\r\n      payload: response.data,\r\n      status: response.status\r\n    })\r\n  })\r\n  .catch(error => {\r\n    dispatch({\r\n      type: constants.GET_USER_INFO,\r\n      payload: error.response.status\r\n    })\r\n  })\r\n}\r\n\r\nexport const resetState = () => (dispatch) => {\r\n  dispatch({\r\n    type: constants.RESET_STATE\r\n  })\r\n}\r\n\r\nexport const getuserRepos = (username) => async (dispatch) => {\r\n  await axios.get(`https://api.github.com/users/${username}/repos`)\r\n  .then(response => {\r\n    dispatch({\r\n      type: constants.GET_USER_REPOS,\r\n      payload: response.data\r\n    })\r\n  })\r\n  .catch(error => {\r\n    dispatch({\r\n      type: constants.GET_USER_REPOS,\r\n      payload: error.response.status\r\n    })\r\n  })\r\n}","import { Component } from \"react\";\r\nimport './searchStyles.css';\r\nimport search from '../../search.svg';\r\nimport alert from '../../alert.svg';\r\nimport UserCard from '../UserCard/userCard';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getUserInfo, resetState } from '../../state/actions';\r\n\r\nclass Search extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.resetState();\r\n  }\r\n\r\n  onChange = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  getUser = (e) => {\r\n    e.preventDefault();\r\n    this.props.getUserInfo(this.state.username);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { userInfo } = this.props;\r\n    return (\r\n      <div>\r\n        \r\n        <form role=\"search\" className=\"search-wrapper\" autoComplete=\"off\">\r\n          <input autoComplete=\"false\" name=\"hidden\" type=\"text\" style={{display: \"none\"}}/>\r\n          <input\r\n            type=\"search\"\r\n            name=\"search\"\r\n            placeholder=\"Search Users\"\r\n            className=\"search-input\"\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n          />\r\n          <button className=\"search-button\" onClick={this.getUser}>\r\n            <img src={search} alt=\"search\" className=\"search-icon\"/>\r\n          </button>\r\n        </form>\r\n          {Object.keys(this.props.userInfo).length !== 0 && <UserCard\r\n            avatar={userInfo.avatar_url}\r\n            username={userInfo.login}\r\n            description={userInfo.bio}\r\n          />}\r\n          {typeof this.props.userInfo === \"number\" &&\r\n          <div className=\"user-error\">\r\n            <img src={alert} alt=\"alert\"/>\r\n            We couldn't load user's data. Please try again.\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  userInfo: PropTypes.object,\r\n  getUserInfo: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userInfo: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUserInfo: bindActionCreators(getUserInfo, dispatch),\r\n  resetState: bindActionCreators(resetState, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","export default __webpack_public_path__ + \"static/media/back.3cc76821.svg\";","import React from 'react';\r\nimport { Component } from 'react';\r\nimport './repoCardStyles.css';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RepoCard extends Component {\r\n\r\n  getDate = (date) => {\r\n    return new Date(date).toDateString();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"repo-wrapper\" onClick={() => window.open(this.props.url, '_blank').focus()}>\r\n        <h3 className=\"repo-name\">{this.props.name}</h3>\r\n        <div className=\"repo-description\">\r\n          <TextTruncate\r\n            line={3}\r\n            element=\"div\"\r\n            truncateText=\"...\"\r\n            text={this.props.description}\r\n          />\r\n        </div>\r\n        <div className=\"repo-created-date\">Created: {this.getDate(this.props.createdDate)}</div>\r\n        <div className=\"repo-info-wrapper\">\r\n          <div className=\"stargazers\">Stargazers: {this.props.stargazers}</div>\r\n          <div className=\"watchers\">Watchers: {this.props.watchers}</div>\r\n          <div className=\"forks\">Forks: {this.props.forks}</div>\r\n          <div className=\"repo-licence\">Licence: {this.props.licence ? this.props.licence : \"None\"}</div>\r\n        </div>\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nRepoCard.propTypes = {\r\n  url: PropTypes.string,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  createdDate: PropTypes.string,\r\n  stargazers: PropTypes.number,\r\n  watchers: PropTypes.number,\r\n  forks: PropTypes.number,\r\n  licence: PropTypes.string\r\n}\r\n\r\nexport default RepoCard;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getuserRepos } from '../../state/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport back from '../../back.svg';\r\nimport alert from '../../alert.svg';\r\nimport RepoCard from '../RepoCard/repoCard';\r\nimport './reposListStyles.css';\r\n\r\nclass ReposList extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getuserRepos(this.props.userInfo.login);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/list-user-repos\">\r\n          <button className=\"back-button\">\r\n            <img src={back} alt=\"Back button\"/>\r\n          </button>\r\n        </Link>\r\n        <div  className=\"repos-list-wrapper\">\r\n          {this.props.userRepos.length > 0 && this.props.userRepos.map(repo =>\r\n            <div className=\"repos-list-element\">\r\n              <RepoCard\r\n                name={repo.name}\r\n                description={repo.description}\r\n                createdDate={repo.created_at}\r\n                stargazers={repo.stargazers_count}\r\n                watchers={repo.watchers_count}\r\n                forks={repo.forks_count}\r\n                license={repo.license}\r\n                url={repo.html_url}\r\n              />\r\n            </div> \r\n          )}\r\n          {typeof this.props.userRepos === \"number\" &&\r\n            <div className=\"repos-error\">\r\n              <img src={alert} alt=\"alert\"/>\r\n              We couldn't load user's repos. Please go back and try again.\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReposList.propTypes = {\r\n  userInfo: PropTypes.object,\r\n  userRepos: PropTypes.array,\r\n  getuserRepos: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userInfo: state.user,\r\n    userRepos: state.repos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getuserRepos: bindActionCreators(getuserRepos, dispatch)\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReposList);","import { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport './App.css';\n\nimport Search from './components/Search/search';\nimport ReposList from './components/ReposList/reposList';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/list-user-repos\" component={Search} exact/>\n            <Route path=\"/repos\" component={ReposList} exact/>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport user from './userReducer';\r\nimport repos from './reposReducer';\r\n\r\nexport default combineReducers({\r\n  user,\r\n  repos\r\n});","/* eslint-disable import/no-anonymous-default-export */\r\nimport { constants } from './constants';\r\n\r\nexport default (state={}, action) => {\r\n  switch (action.type) {\r\n    case constants.GET_USER_INFO:\r\n      return action.payload;\r\n\r\n      case constants.RESET_STATE:\r\n        return {};\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport { constants } from './constants';\r\n\r\nexport default (state=[], action) => {\r\n  switch (action.type) {\r\n    case constants.GET_USER_REPOS:\r\n      return action.payload;\r\n\r\n    case constants.RESET_STATE:\r\n      return [];\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport RootReducer from './state/index';\r\nimport logger from 'redux-logger';\r\n\r\nexport const middlewares = [ReduxThunk, logger];\r\n\r\nexport const createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(RootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './createStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}