{"version":3,"sources":["state/constants.js","state/actions.js","components/UserCard/userCard.js","search.svg","alert.svg","components/Search/search.js","components/RepoCard/repoCard.js","back.svg","components/ReposList/reposList.js","App.js","state/index.js","state/userReducer.js","state/reposReducer.js","createStore.js","index.js"],"names":["constants","getUserInfo","username","dispatch","a","axios","get","then","response","type","payload","data","status","catch","error","resetState","getuserRepos","length","console","log","UserCard","to","className","src","this","props","avatar","alt","description","Component","Search","onChange","e","preventDefault","setState","target","value","getUser","state","userInfo","role","autoComplete","name","style","display","placeholder","onClick","search","Object","keys","avatar_url","login","bio","alert","connect","user","bindActionCreators","RepoCard","getDate","date","Date","toDateString","url","createdDate","stargazers","watchers","forks","licence","window","open","focus","ReposList","userRepos","back","map","repo","created_at","stargazers_count","watchers_count","forks_count","license","html_url","repos","App","path","component","exact","combineReducers","action","middlewares","ReduxThunk","logger","store","applyMiddleware","createStore","createStoreWithMiddleware","RootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb9b1c84.chunk.js","sourcesContent":["export const constants = {\r\n  GET_USER_INFO: 'GET_USER_INFO',\r\n  GET_USER_REPOS: 'GET_USER_REPOS',\r\n  RESET_STATE: 'RESET_STATE'\r\n}","import { constants } from './constants';\r\nimport axios from 'axios';\r\n\r\nexport const getUserInfo = (username) => async (dispatch) => {\r\n  await axios.get( `https://api.github.com/users/${username}`)\r\n  .then(response => {\r\n    dispatch({\r\n      type: constants.GET_USER_INFO,\r\n      payload: response.data,\r\n      status: response.status\r\n    })\r\n  })\r\n  .catch(error => {\r\n    dispatch({\r\n      type: constants.GET_USER_INFO,\r\n      payload: error.response.status\r\n    })\r\n  })\r\n}\r\n\r\nexport const resetState = () => (dispatch) => {\r\n  dispatch({\r\n    type: constants.RESET_STATE\r\n  })\r\n}\r\n\r\nexport const getuserRepos = (username) => async (dispatch) => {\r\n  await axios.get(`https://api.github.com/users/${username}/repos`)\r\n  .then(response => {\r\n    if(response.data.length === 0) {\r\n      console.log('entered if')\r\n      dispatch({\r\n        type: constants.GET_USER_REPOS,\r\n        payload: null\r\n      })\r\n    }\r\n    else {\r\n      dispatch({\r\n        type: constants.GET_USER_REPOS,\r\n        payload: response.data\r\n      })\r\n    }\r\n  })\r\n  .catch(error => {\r\n    dispatch({\r\n      type: constants.GET_USER_REPOS,\r\n      payload: error && error.response.status\r\n    })\r\n  })\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './userCardStyles.css';\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    return (\r\n      <Link to=\"/repos\" className=\"user-link\">\r\n        <button className=\"user-wrapper\">\r\n          <img src={this.props.avatar} alt=\"avatar\" className=\"user-avatar\"/>\r\n          <div className=\"user-info\">\r\n            <h4 className=\"user-name\">{this.props.username}</h4>\r\n            <div className=\"user-description\">\r\n                <div className=\"user-description-clamp\">\r\n                  {this.props.description}\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  avatar: PropTypes.string,\r\n  username: PropTypes.string,\r\n  description: PropTypes.string\r\n}\r\n\r\nexport default UserCard;","export default __webpack_public_path__ + \"static/media/search.8e55e40c.svg\";","export default __webpack_public_path__ + \"static/media/alert.162cee4a.svg\";","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getUserInfo, resetState } from '../../state/actions';\r\n\r\nimport UserCard from '../UserCard/userCard';\r\n\r\nimport search from '../../search.svg';\r\nimport alert from '../../alert.svg';\r\n\r\nimport './searchStyles.css';\r\n\r\nclass Search extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.resetState();\r\n  }\r\n\r\n  onChange = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  getUser = (e) => {\r\n    e.preventDefault();\r\n    this.props.getUserInfo(this.state.username);\r\n  }\r\n\r\n  render() {\r\n    const { userInfo } = this.props;\r\n    return (\r\n      <div>\r\n        <form role=\"search\" className=\"search-wrapper\" autoComplete=\"off\">\r\n          <input autoComplete=\"false\" name=\"hidden\" type=\"text\" style={{display: \"none\"}}/>\r\n          <input\r\n            type=\"search\"\r\n            name=\"search\"\r\n            placeholder=\"Search Users\"\r\n            className=\"search-input\"\r\n            onChange={this.onChange}\r\n            value={this.state.username}\r\n          />\r\n          <button className=\"search-button\" onClick={this.getUser}>\r\n            <img src={search} alt=\"search\" className=\"search-icon\"/>\r\n          </button>\r\n        </form>\r\n          {Object.keys(this.props.userInfo).length !== 0 &&\r\n            <UserCard\r\n              avatar={userInfo.avatar_url}\r\n              username={userInfo.login}\r\n              description={userInfo.bio}\r\n            />\r\n          }\r\n          {typeof this.props.userInfo === \"number\" &&\r\n            <div className=\"user-error\">\r\n              <img src={alert} alt=\"alert\"/>\r\n              We couldn't load user's data. Please try again.\r\n            </div>\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  userInfo: PropTypes.object,\r\n  getUserInfo: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userInfo: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getUserInfo: bindActionCreators(getUserInfo, dispatch),\r\n  resetState: bindActionCreators(resetState, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './repoCardStyles.css';\r\n\r\nclass RepoCard extends Component {\r\n\r\n  getDate = (date) => {\r\n    return new Date(date).toDateString();\r\n  }\r\n\r\n  render() {\r\n    const { url, name, description, createdDate, stargazers, watchers, forks, licence } = this.props;\r\n    return (\r\n      <button className=\"repo-wrapper\" onClick={() => window.open(url, '_blank').focus()}>\r\n        <h3 className=\"repo-name\">{name}</h3>\r\n        <div className=\"repo-description\">\r\n          <div className=\"repo-description-clamp\">\r\n            {description ? description : \"This repository doesn't have a description.\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"repo-created-date\">Created: {this.getDate(createdDate)}</div>\r\n        <div className=\"repo-info-wrapper\">\r\n          <div className=\"repo-element-col-1\">Stargazers: {stargazers}</div>\r\n          <div className=\"repo-element-col-2\">Watchers: {watchers}</div>\r\n          <div className=\"repo-element-col-1\">Forks: {forks}</div>\r\n          <div className=\"repo-element-col-2\">Licence: {licence ? licence : \"None\"}</div>\r\n        </div>\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nRepoCard.propTypes = {\r\n  url: PropTypes.string,\r\n  name: PropTypes.string,\r\n  description: PropTypes.string,\r\n  createdDate: PropTypes.string,\r\n  stargazers: PropTypes.number,\r\n  watchers: PropTypes.number,\r\n  forks: PropTypes.number,\r\n  licence: PropTypes.string\r\n}\r\n\r\nexport default RepoCard;","export default __webpack_public_path__ + \"static/media/back.3cc76821.svg\";","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getuserRepos } from '../../state/actions';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RepoCard from '../RepoCard/repoCard';\r\n\r\nimport back from '../../back.svg';\r\nimport alert from '../../alert.svg';\r\n\r\nimport './reposListStyles.css';\r\n\r\nclass ReposList extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getuserRepos(this.props.userInfo.login);\r\n  }\r\n  \r\n  render() {\r\n    const { userRepos } = this.props;\r\n    return (\r\n      <div>\r\n        <Link to=\"/list-user-repos\">\r\n          <button className=\"back-button\">\r\n            <img src={back} alt=\"Back button\"/>\r\n          </button>\r\n        </Link>\r\n        {!userRepos && <div className=\"no-repos\">This user doesn't have any repositories.</div>}\r\n        {userRepos && userRepos.length === 0 && <div className=\"loading-repos\">Loading...</div>}\r\n        <div  className=\"repos-list-wrapper\">\r\n          {userRepos && userRepos.length > 0 && userRepos.map(repo =>\r\n            <div className=\"repos-list-element\">\r\n              <RepoCard\r\n                name={repo.name}\r\n                description={repo.description}\r\n                createdDate={repo.created_at}\r\n                stargazers={repo.stargazers_count}\r\n                watchers={repo.watchers_count}\r\n                forks={repo.forks_count}\r\n                license={repo.license}\r\n                url={repo.html_url}\r\n              />\r\n            </div> \r\n          )}\r\n          {typeof userRepos === \"number\" &&\r\n            <div className=\"repos-error\">\r\n              <img src={alert} alt=\"alert\"/>\r\n              We couldn't load user's repos. Please go back and try again.\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReposList.propTypes = {\r\n  userInfo: PropTypes.object,\r\n  userRepos: PropTypes.array,\r\n  getuserRepos: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userInfo: state.user,\r\n    userRepos: state.repos\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getuserRepos: bindActionCreators(getuserRepos, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReposList);","import { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport Search from './components/Search/search';\nimport ReposList from './components/ReposList/reposList';\n\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/list-user-repos\" component={Search} exact/>\n            <Route path=\"/repos\" component={ReposList} exact/>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport user from './userReducer';\r\nimport repos from './reposReducer';\r\n\r\nexport default combineReducers({\r\n  user,\r\n  repos\r\n});","/* eslint-disable import/no-anonymous-default-export */\r\nimport { constants } from './constants';\r\n\r\nexport default (state={}, action) => {\r\n  switch (action.type) {\r\n    case constants.GET_USER_INFO:\r\n      return action.payload;\r\n\r\n      case constants.RESET_STATE:\r\n        return {};\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","/* eslint-disable import/no-anonymous-default-export */\r\nimport { constants } from './constants';\r\n\r\nexport default (state=[], action) => {\r\n  switch (action.type) {\r\n    case constants.GET_USER_REPOS:\r\n      return action.payload;\r\n\r\n    case constants.RESET_STATE:\r\n      return [];\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport RootReducer from './state/index';\r\nimport logger from 'redux-logger';\r\n\r\nexport const middlewares = [ReduxThunk, logger];\r\n\r\nexport const createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(RootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './createStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}